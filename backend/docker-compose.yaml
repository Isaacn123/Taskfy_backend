version: '3.8'

services:
  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: taskify-backend
    ports:
      - "8000:8002"
    volumes:
      - .:/app
    working_dir: /app
    env_file:
      - ../.env.production
    environment:
      - PYTHONPATH=/app
    networks:
      - taskify-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "python - <<'PY'\nimport sys, urllib.request\ntry:\n    urllib.request.urlopen('http://localhost:8002/health', timeout=5)\n    sys.exit(0)\nexcept Exception:\n    sys.exit(1)\nPY"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - mysql

  # OLD POSTGRESQL CONFIGURATION (COMMENTED OUT)
  # postgres:
  #   image: postgres:15
  #   container_name: taskify-db
  #   env_file:
  #     - .env.db
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - taskify-network
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # NEW MYSQL CONFIGURATION
  mysql:
    image: mysql:8.0
    container_name: taskify-mysql
    env_file:
      - ../.env.production
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - taskify-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Adminer - Web-based database management tool
  adminer:
    image: adminer:latest
    container_name: adminer_taskify
    restart: unless-stopped
    ports:
      - "8087:8080"
    depends_on:
      - mysql
    networks:
      - taskify-network

networks:
  taskify-network:
    driver: bridge

volumes:
  mysql_data:
  # OLD POSTGRESQL VOLUME (COMMENTED OUT)
  # postgres_data:
