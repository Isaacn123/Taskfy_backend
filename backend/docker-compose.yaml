version: '3.8'

services:
  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: taskfy-backend
    ports:
      - "8003:8000"
    # command: uvicorn main:app --host 0.0.0.0 --port 8003 --reload
    volumes:
      - .:/app
    working_dir: /app
    env_file:
      - ../.env.production
    
    environment:
      - PYTHONPATH=/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "python - <<'PY'\nimport sys, urllib.request\ntry:\n    urllib.request.urlopen('http://localhost:8003/health', timeout=5)\n    sys.exit(0)\nexcept Exception:\n    sys.exit(1)\nPY"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - taskfy_db

  # OLD POSTGRESQL CONFIGURATION (COMMENTED OUT)
  # postgres:
  #   image: postgres:15
  #   container_name: taskify-db
  #   env_file:
  #     - .env.db
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - taskify-network
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # NEW MYSQL CONFIGURATION
  taskfy_db:
    image: mysql:8.0
    container_name: taskfy-db
    restart: always
    env_file:
      - ../.env.production
    volumes:
      - mysql_data_taskfy:/var/lib/mysql

  # Adminer - Web-based database management tool
  adminer:
    image: adminer:latest
    container_name: adminer_taskfy
    restart: unless-stopped
    ports:
      - "8087:8080"
    depends_on:
      - taskfy_db

volumes:
  mysql_data_taskfy:
  # OLD POSTGRESQL VOLUME (COMMENTED OUT)
  # postgres_data:
