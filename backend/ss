    # HTTP redirect to HTT
# HTTP redirect to HTTPS
server {
    listen 80;
    server_name 45.56.120.65 tasky.duckdns.org;
    return 301 https://$server_name$request_uri;
}

# HTTPS configuration
server {
    listen 443 ssl;
    server_name 45.56.120.65 tasky.duckdns.org;

    # CHANGE THESE LINES: Use self-signed certificate instead of Let's Encrypt
    # CHANGE THESE LINES: Use self-signed certificate instead of Let's Encrypt
   # ssl_certificate /etc/nginx/ssl/selfsigned.crt;
   # ssl_certificate_key /etc/nginx/ssl/selfsigned.key;
    ssl_certificate /etc/letsencrypt/live/tasky.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tasky.duckdns.org/privkey.pem;
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    # Proxy settings
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Default location
    location / {
        proxy_pass http://localhost:8000;  # Your main container

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;     
 }
    # Events backend API
    location /api/events/ {
        proxy_pass http://localhost:8001/;
        # Add any specific headers or settings for this API
    }

    # Adminer database interface
    location /adminer/ {
        proxy_pass http://localhost:8087/;
        # You might need to handle Adminer's specific headers
    }

    # Additional locations for other containers
    location /app2/ {
        proxy_pass http://localhost:8003/;  # Container on port 300
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/ {
     # Matches /api/public/audios/
    proxy_pass http://localhost:8001/api/;
      }

    # Add more locations for other containers as needed
    # location /api/ {
    #     proxy_pass http://localhost:8002/;
    # }

    # Static files (if needed)
    location /static/ {
        alias /path/to/static/files/;
        expires 30d;
    }
}


//////








    server {
        listen 80;
        server_name 45.56.120.65;

        # Redirect HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl;
        server_name 45.56.120.65;

        # SSL Configuration
        ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

        # SSL Security Settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security Headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        location /app2/ {
            proxy_pass http://127.0.0.1:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            proxy_pass http://fastapi;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }






